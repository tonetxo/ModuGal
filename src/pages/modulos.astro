---
import Layout from '../layouts/Layout.astro';
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import { promises as fs } from 'fs';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Helper function to generate a slug from a string
const slugify = (text) => {
  if (!text) return '';
  return text
    .toString()
    .toLowerCase()
    .replace(/\s+/g, '-')           // Replace spaces with -
    .replace(/[^\w\-]+/g, '')       // Remove all non-word chars
    .replace(/\-\-+/g, '-')         // Replace multiple - with single -
    .replace(/^-+/, '')             // Trim - from start of text
    .replace(/-+$/, '');            // Trim - from end of text
};

// Read and parse the modulos.md file
const mdContent = await fs.readFile('modulos.md', 'utf-8');

const categories = [];
let currentCategory = null;
let currentModule = null;
let currentListKey = null; // 'inputs', 'outputs', 'controls', or 'description'

mdContent.split('\n').forEach(line => {
    const trimmedLine = line.trim();

    if (trimmedLine.startsWith('## ')) {
        const title = trimmedLine.substring(3).trim();
        currentCategory = { title, slug: slugify(title), modules: [] };
        categories.push(currentCategory);
        currentModule = null;
        currentListKey = null;
        return;
    }

    if (trimmedLine.startsWith('### ') && currentCategory) {
        const title = trimmedLine.substring(4).trim();
        currentModule = {
            title,
            slug: slugify(title),
            description: '',
            inputs: [],
            outputs: [],
            controls: []
        };
        currentCategory.modules.push(currentModule);
        currentListKey = null;
        return;
    }

    if (!currentModule) return;

    if (trimmedLine.startsWith('**Descripción:**') || trimmedLine.startsWith('- **Descripción:**')) {
        currentModule.description = trimmedLine.replace(/^-?\s*\*\*Descripción:\*\*\s*/, '');
        currentListKey = 'description';
        return;
    }
    if (trimmedLine.startsWith('**Controles:**') || trimmedLine.startsWith('- **Controles:**')) {
        currentListKey = 'controls';
        return;
    }
    if (trimmedLine.startsWith('**Entradas:**') || trimmedLine.startsWith('- **Entradas:**')) {
        currentListKey = 'inputs';
        return;
    }
    if (trimmedLine.startsWith('**Salidas:**') || trimmedLine.startsWith('- **Salidas:**')) {
        currentListKey = 'outputs';
        return;
    }

    if (trimmedLine.startsWith('- ')) {
        const item = trimmedLine.substring(2).trim();
        if (currentListKey && Array.isArray(currentModule[currentListKey])) {
            currentModule[currentListKey].push(item);
        }
    } else if (trimmedLine && currentListKey === 'description') {
        currentModule.description += ' ' + trimmedLine;
    }
});
---

<Layout title={t('nav.modules')}>
  <main class="page-content">
    <h1 data-i18n-key="nav.modules">{t('nav.modules')}</h1>
    
    <div class="modules-container">
      <aside class="modules-sidebar">
        <h2 class="sidebar-title" data-i18n-key="modules_menu.title">{t('modules_menu.title')}</h2>
        <nav>
          <ul>
            {categories.map(category => (
              <li><a href={`#${category.slug}`}>{category.title}</a></li>
            ))}
          </ul>
        </nav>
      </aside>
      <section class="modules-content">
        {categories.map(category => (
          <div id={category.slug} class="category-section">
            <h2>{category.title}</h2>
            {category.modules.map(module => (
              <article class="module-card" id={module.slug}>
                <h3>{module.title}</h3>
                <p>{module.description}</p>
                
                {module.controls.length > 0 && (
                  <>
                    <h4>Controles</h4>
                    <ul>
                      {module.controls.map(control => <li>{control}</li>)}
                    </ul>
                  </>
                )}
                
                {module.inputs.length > 0 && (
                  <>
                    <h4>Entradas</h4>
                    <ul>
                      {module.inputs.map(input => <li>{input}</li>)}
                    </ul>
                  </>
                )}

                {module.outputs.length > 0 && (
                  <>
                    <h4>Salidas</h4>
                    <ul>
                      {module.outputs.map(output => <li>{output}</li>)}
                    </ul>
                  </>
                )}
              </article>
            ))}
          </div>
        ))}
      </section>
    </div>
  </main>
</Layout>

<style>
  :root {
    --sidebar-width: 280px;
  }

  .page-content {
    max-width: 1400px;
    margin: 2rem auto;
    padding: 2rem;
    color: var(--color-text);
  }

  h1 {
    text-align: center;
    margin-bottom: 3rem;
    font-size: 2.5rem;
    width: 100%;
  }

  .modules-container {
    display: flex;
    gap: 2rem;
    align-items: flex-start;
  }

  .modules-sidebar {
    flex: 0 0 var(--sidebar-width);
    background-color: #2a2a2a;
    border: 1px solid #444;
    border-radius: 8px;
    padding: 1.5rem;
    height: auto;
    position: sticky;
    top: 2rem;
  }

  .sidebar-title {
    font-family: var(--font-family-headings);
    color: var(--color-primary);
    font-size: 1.8rem;
    margin-top: 0;
    margin-bottom: 1.5rem;
    border-bottom: 2px solid var(--color-accent-1);
    padding-bottom: 0.5rem;
  }

  .modules-sidebar nav ul {
    list-style: none;
    padding: 0;
  }

  .modules-sidebar nav li {
    margin-bottom: 0.75rem;
  }

  .modules-sidebar nav a {
    color: var(--color-text);
    text-decoration: none;
    font-size: 1.1rem;
    display: block;
    padding: 0.5rem 0.75rem;
    border-radius: 4px;
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
  }

  .modules-sidebar nav a:hover {
    background-color: var(--color-accent-1);
    color: #1a1a1a;
  }

  .modules-content {
    flex: 1;
    min-width: 0;
  }

  .category-section {
    margin-bottom: 4rem;
    scroll-margin-top: 2rem; /* Offset for sticky header */
  }

  .category-section:last-child {
    margin-bottom: 0;
  }

  .category-section h2 {
    font-family: var(--font-family-headings);
    color: var(--color-accent-1);
    font-size: 2.2rem;
    margin-bottom: 2rem;
    border-bottom: 2px solid #444;
    padding-bottom: 0.75rem;
  }

  .module-card {
    background-color: #333;
    border: 1px solid #444;
    border-radius: 8px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .module-card:last-child {
    margin-bottom: 0;
  }

  .module-card h3 {
    font-size: 1.8rem;
    color: var(--color-primary);
    margin-top: 0;
    margin-bottom: 1rem;
  }

  .module-card p {
    line-height: 1.7;
    margin-bottom: 1.5rem;
  }

  .module-card h4 {
    font-size: 1.3rem;
    color: var(--color-accent-1);
    margin-top: 2rem;
    margin-bottom: 1rem;
    border-bottom: 1px solid #555;
    padding-bottom: 0.5rem;
  }

  .module-card ul {
    list-style: none;
    padding-left: 0;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .module-card ul li {
    background-color: #2c2c2c;
    padding: 0.75rem 1rem;
    border-radius: 4px;
    border-left: 3px solid var(--color-accent-1);
    font-family: monospace;
  }

  @media (max-width: 900px) {
    .modules-container {
      flex-direction: column;
    }
    .modules-sidebar {
      position: static;
      width: 100%;
      margin-bottom: 2rem;
    }
  }
</style>