---
import Layout from './Layout.astro';
import { useTranslations } from '../i18n/utils';
import { marked } from 'marked';

const { lang, entryId } = Astro.props;

const t = useTranslations(lang);

const allModules = await import.meta.glob('../content/modules/*.md', { as: 'raw' });
const modulePath = `../content/modules/${entryId}.md`;

if (!allModules[modulePath]) {
  throw new Error(`Module with path ${modulePath} not found.`);
}

const rawContentWithFrontmatter = await allModules[modulePath]();

// Strip frontmatter
const rawContent = rawContentWithFrontmatter.replace(/---[\s\S]*?---/, '').trim();

// Process content to ensure proper structure with IDs
// First add IDs to headings using a more specific regex that accounts for spacing
let processedContent = rawContent;

// Replace H2 headings with ID attributes
processedContent = processedContent.replace(/^(##\s.+)$/gm, (match, heading) => {
  const headingText = heading.replace(/^##\s+/, ''); // Remove ## and any space after
  const id = headingText.toLowerCase()
                .replace(/[^\w\s-]/g, '') // Remove special characters
                .replace(/\s+/g, '-'); // Replace spaces with hyphens
  return `<h2 id="${id}">${headingText}</h2>`;
});

// Parse the markdown content
const contentHtml = marked.parse(processedContent);

// We need to get the headings manually now
const headings = rawContent.match(/^##\s(.+)/gm)?.map(h => ({
    depth: 2,
    slug: h.replace(/^##\s/, '').toLowerCase().replace(/\s+/g, '-').replace(/[^\w\-]+/g, ''),
    text: h.replace(/^##\s/, '')
})) || [];

const categories = headings;
---
<Layout title={t('nav.modules')}>
  <main class="page-content">
    <h1 data-i18n-key="nav.modules">{t('nav.modules')}</h1>
    
    <div class="modules-container">
      <aside class="modules-sidebar">
        <h2 class="sidebar-title" data-i18n-key="modules_menu.title">{t('modules_menu.title')}</h2>
        <nav>
          <ul>
            {categories.map(category => (
              <li><a href={`#${category.slug}`}>{category.text}</a></li>
            ))}
          </ul>
        </nav>
      </aside>
      <section class="modules-content">
        <div class="markdown-content" set:html={contentHtml}></div>
      </section>
    </div>
  </main>
  
  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      // Add smooth scrolling for sidebar navigation links
      const sidebarLinks = document.querySelectorAll('.modules-sidebar nav a');
      
      sidebarLinks.forEach(link => {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          
          const targetId = this.getAttribute('href').substring(1); // Remove the '#'
          const targetElement = document.getElementById(targetId);
          
          if (targetElement) {
            // Calculate offset to account for fixed elements
            const offsetTop = targetElement.offsetTop - 100; // Adjust for header space
            
            window.scrollTo({
              top: offsetTop,
              behavior: 'smooth'
            });
            
            // Update active link after scrolling
            setTimeout(() => {
              sidebarLinks.forEach(link => link.classList.remove('active'));
              this.classList.add('active');
            }, 300);
          }
        });
      });
      
      // Add active link highlighting based on scroll position
      const observerOptions = {
        root: null,
        rootMargin: '-20% 0px -80% 0px', // Trigger when element is in top 20% of viewport
        threshold: 0
      };
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            // Remove active class from all links
            sidebarLinks.forEach(link => link.classList.remove('active'));
            
            // Add active class to the corresponding link
            const activeLink = document.querySelector(`.modules-sidebar nav a[href="#${entry.target.id}"]`);
            if (activeLink) {
              activeLink.classList.add('active');
            }
          }
        });
      }, observerOptions);
      
      // Observe all h2 elements in the content that have IDs
      document.querySelectorAll('.markdown-content h2[id]').forEach(h2 => {
        observer.observe(h2);
      });
    });
  </script>
</Layout>

<style>
  :root {
    --sidebar-width: 280px;
  }

  .page-content {
    max-width: 1400px;
    margin: 2rem auto;
    padding: 2rem;
    color: var(--color-text);
  }

  h1 {
    text-align: center;
    margin-bottom: 4rem; /* Aumentado */
    font-size: 2.8rem; /* Aumentado */
    width: 100%;
  }

  .modules-container {
    display: flex;
    gap: 2.5rem; /* Aumentado */
    align-items: flex-start;
  }

  .modules-sidebar {
    flex: 0 0 var(--sidebar-width);
    background-color: #2a2a2a;
    border: 1px solid #444;
    border-radius: 8px;
    padding: 1.5rem;
    height: auto;
    position: sticky;
    top: 2rem;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);
  }

  .sidebar-title {
    font-family: var(--font-family-headings);
    color: var(--color-primary);
    font-size: 1.8rem;
    margin-top: 0;
    margin-bottom: 1.5rem;
    border-bottom: 2px solid var(--color-accent-1);
    padding-bottom: 0.5rem;
  }

  .modules-sidebar nav ul {
    list-style: none;
    padding: 0;
  }

  .modules-sidebar nav li {
    margin-bottom: 0.75rem;
  }

  .modules-sidebar nav a {
    color: var(--color-text);
    text-decoration: none;
    font-size: 1.1rem;
    display: block;
    padding: 0.5rem 0.75rem;
    border-radius: 4px;
    transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
    border: 1px solid #444;
    background: #333;
    margin-bottom: 0.5rem;
  }

  .modules-sidebar nav a:hover {
    background-color: var(--color-accent-1);
    color: #1a1a1a;
  }

  .modules-content {
    flex: 1;
    min-width: 0;
    background-color: #252525;
    border: 1px solid #444;
    border-radius: 8px;
    padding: 2.5rem; /* Aumentado */
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.5);
  }

  /* Estilos para el contenido Markdown */
  .markdown-content :global(h1),
  .markdown-content :global(h2),
  .markdown-content :global(h3),
  .markdown-content :global(h4) {
    font-family: var(--font-family-headings);
    color: var(--color-accent-1);
    margin: 0;
  }

  .markdown-content :global(h1) { 
    font-size: 2.5rem; 
    margin-bottom: 2.5rem; /* Aumentado */
    border-bottom: 2px solid var(--color-accent-1);
    padding-bottom: 1rem; /* Aumentado */
  }
  
  .markdown-content :global(h2) { 
    font-size: 2.2rem; 
    margin-top: 4rem; /* Reducido */
    margin-bottom: 2rem; /* Reducido */
    border-bottom: 2px solid #444; 
    padding-bottom: 1rem; 
    background: #333;
    padding: 1.5rem;
    border-radius: 4px;
    border-left: 4px solid var(--color-accent-1); 
  }
  
  .markdown-content :global(h3) { 
    font-size: 1.8rem; 
    color: var(--color-accent-2); 
    margin: 3rem 0 1.5rem 0; /* Reducido */
    padding: 0.5rem 0;
  }
  
  .markdown-content :global(h4) { 
    font-size: 1.4rem; /* Aumentado */
    margin: 3rem 0 1.5rem 0; /* Aumentado */
    border-bottom: 1px solid #555; 
    padding-bottom: 0.75rem; /* Aumentado */
  }

  .markdown-content :global(p) {
    line-height: 1.9; /* Aumentado */
    margin-bottom: 1.5rem; /* Aumentado */
    font-size: 1.1rem; /* Aumentado */
    color: #e0e0e0;
  }

  /* Párrafo introductorio */
  .markdown-content :global(> p:first-of-type) {
    margin-bottom: 5rem; /* Aumentado */
    padding: 2rem;
    background: #2a2a2a;
    border-radius: 6px;
    border-left: 4px solid var(--color-accent-1);
    font-size: 1.15rem; /* Aumentado */
    line-height: 1.9;
  }
  
  .markdown-content :global(hr) {
    display: none;
  }
  
  .markdown-content :global(> h2:first-of-type) {
    margin-top: 4rem; /* Aumentado */
  }

  .markdown-content :global(ul) {
    list-style: disc;
    padding-left: 2rem; /* Aumentado */
    margin-bottom: 1.5rem; /* Aumentado */
  }

  .markdown-content :global(ul li) {
    margin-bottom: 1rem; /* Aumentado */
    line-height: 1.8; /* Aumentado */
    padding: 0.4rem 0; /* Aumentado */
  }

  .markdown-content :global(ul ul) {
      margin-top: 1rem; /* Aumentado */
      margin-bottom: 1rem; /* Aumentado */
      padding-left: 1.8rem; /* Aumentado */
  }

  .markdown-content :global(strong) {
    color: var(--color-accent-1);
    font-weight: 600;
  }
  
  /* Estilos para las "tarjetas" de descripción de módulos */
  .markdown-content :global(h3 + ul) {
    background-color: #333;
    padding: 2rem; 
    border-radius: 6px;
    border: 1px solid #444;
    margin-top: 2rem; 
    margin-bottom: 2.5rem; /* Reducido */
  }

  .markdown-content :global(h3 + ul li:first-child) {
    font-weight: 600;
    color: var(--color-accent-2);
    margin-bottom: 0.5rem; /* Reducido drásticamente */
    padding-bottom: 0.5rem; /* Reducido drásticamente */
    border-bottom: 1px solid #555;
  }
  
  .markdown-content :global(h3 + ul li) {
    margin-bottom: 0.4rem; /* Reducido drásticamente */
    padding: 0.4rem 0; /* Reducido drásticamente */
    border-bottom: 1px solid #444;
  }
  
  .markdown-content :global(h3 + ul li:last-child) {
    border-bottom: none;
    margin-bottom: 0;
  }

  @media (max-width: 900px) {
    .modules-container {
      flex-direction: column;
    }
    .modules-sidebar {
      position: static;
      width: 100%;
      margin-bottom: 2rem;
    }
  }
</style>
