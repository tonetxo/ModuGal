
---
import { languages, defaultLang } from "../i18n/ui";

const { pathname } = Astro.url;

// Obtener el slug de la página actual sin el prefijo de idioma
const pathParts = pathname.split("/").filter(p => p);
const langKeys = Object.keys(languages);
let currentLang = defaultLang;

if (pathParts.length > 0 && langKeys.includes(pathParts[0])) {
  currentLang = pathParts.shift();
}
const slug = pathParts.join("/") || 'index'; // 'index' para la página de inicio

---

<div class="lang-switcher">
  {Object.entries(languages).map(([lang, label]) => {
    // Construir la nueva ruta correctamente
    // Para la página de inicio, el slug es 'index', que no debe aparecer en la URL.
    const finalSlug = slug === 'index' ? '' : slug;
    const newPath = lang === defaultLang ? `/${lang}/${finalSlug}` : `/${lang}/${finalSlug}`;
    
    // Eliminar la barra final si existe, excepto para la raíz del idioma
    const finalPath = newPath.length > `/${lang}/`.length && newPath.endsWith('/') 
      ? newPath.slice(0, -1) 
      : newPath;

    return (
      <a
        href={finalPath}
        class:list={[
          "lang-button",
          { active: lang === currentLang },
        ]}
      >
        {label}
      </a>
    );
  })}
</div>

<style>
  .lang-switcher {
    position: fixed; /* Stay on screen */
    top: 1rem;
    right: 1rem;
    z-index: 100;
    display: flex;
    gap: 0.5rem;
  }
  .lang-button {
    background-color: transparent;
    border: 1px solid var(--color-accent-2);
    color: var(--color-accent-2);
    padding: 0.25rem 0.75rem;
    border-radius: 4px;
    cursor: pointer;
    font-family: var(--font-family-body);
    opacity: 0.7;
    transition: all 0.2s ease;
  }
  .lang-button:hover {
    opacity: 1;
    background-color: var(--color-accent-2);
    color: var(--color-base);
  }
  .lang-button.active {
    opacity: 1;
    background-color: var(--color-accent-1);
    border-color: var(--color-accent-1);
    color: var(--color-base);
  }
</style>